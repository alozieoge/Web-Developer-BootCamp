Additional CSS Properties
=========================

- Transitions
- Position property
- Opacity and Alpha channel
- Google Fonts
- Background property
- Transforms


Alpha and Opacity
-----------------
- Alpha is the level of transparency applied to an element's background color. 
- 0 (full transparency) <= alpha <= 1 (no transparency)

- Represented in rgba: (0, 209, 112, 0.5)
- or in hex system: #00cca80f
                           ^^ alpha value


- Opacity sets the level of transparency of an element and all elements contained within it. 
- It applied to both the (text) color and background color of an element and its child elements.
- 0 (full transparency) <= opacity <= 1 (no transparency)
- It is a stand-alone CSS property. { opacity: 0.5; }


Position
--------
- Sets the position of an element in a document. 
- Determines how 4 other properties work: 
  { top, right, bottom, left }. 
  
Position values
---------------
1. static
- Element is positioned in the normal document flow.
- Default setting of all elements. 
- { top, right, bottom, left } have no effect. 

2. relative
- Element is positioned in the normal document flow, 
- But offset relative to itself (static position) based on { top, right, bottom, left } values. 

3. absolute 
- Element is removed from the normal document flow. 
- By default, it is positioned relative to the nearest positioned ancestor if any, 
- Otherwise it is positioned relative to the initial container / ancestor i.e. <body></body>. 
- Based on the { top, right, bottom, left } values. 

4. fixed
- Element is removed from the normal document flow,  
- And occupies no space in the page layout. 
- It is positioned relative to the initial containing block, defined by the page's current viewport.
- Commonly used to make the navigation bar remain at the top of the screen while scrolling up or down a webpage. 

5. sticky
- Element is positioned in the normal document flow, 
- And offset relative to its nearest scrolling ancestor (nearest ancestor with scrolling mechanism enabled) and containing block. 
- Might be tricky to get it to work correctly. 


Transition
----------
- Enables you to animate the transition from one property value to another property value / animate the change in appearance of an element. 
- The transition duration is defined as a CSS property: { transition: 1s; }

- Other specific behaviours of the transition can be defined using the following syntax:
  property-name | duration | timing-function | delay
  
  e.g. { transition: background-color 1s ease-in 2s; }
  
- You can specify the transition of multiple properties on the same line:
  { transition: background-color 1s, border-radius 2s; }
  
- or for all properties (not recommended):
  { transition: all 2s; }
  
Timing functions
----------------
- Determine how the property transitions between 2 states e.g. linear, step, ease-in, ease-out, bezier ...
- The transition will still happen in the same duration irrespective of the timing function. 
- The timing function can be specified as a separate property:
  { transition-timing-function: ease-in; }
  

